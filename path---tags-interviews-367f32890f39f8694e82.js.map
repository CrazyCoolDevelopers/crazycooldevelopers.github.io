{"version":3,"sources":["webpack:///path---tags-interviews-367f32890f39f8694e82.js","webpack:///./.cache/json/tags-interviews.json"],"names":["webpackJsonp","276","module","exports","pathContext","posts","devchallenges","excerpt","html","id","timeToRead","frontmatter","date","path","tags","title","interviews","interview","post","tag"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,aAAeC,OAASC,gBAAkBC,QAAA,GAAAC,KAAA,+/BAAAC,GAAA,qHAAAC,WAAA,EAAAC,aAAusCC,KAAA,aAAAC,KAAA,wBAAAC,MAAA,iBAAAC,MAAA,yDAA2IC,aAAiBT,QAAA,GAAAC,KAAA,gyNAAAC,GAAA,sHAAAC,WAAA,EAAAC,aAAq+NC,KAAA,aAAAC,KAAA,yBAAAC,MAAA,cAAAC,MAAA,gCAAgHE,YAAgBV,QAAA,GAAAC,KAAA,8iJAAAC,GAAA,0HAAAC,WAAA,EAAAC,aAA+tJC,KAAA,aAAAC,KAAA,6BAAAC,MAAA,aAAAC,MAAA,oDAAyIR,QAAA,GAAAC,KAAA,u4MAAAC,GAAA,mHAAAC,WAAA,EAAAC,aAAijNC,KAAA,aAAAC,KAAA,sBAAAC,MAAA,aAAAC,MAAA,mCAAiHR,QAAA,GAAAC,KAAA,42RAAAC,GAAA,sHAAAC,WAAA,EAAAC,aAAyhSC,KAAA,aAAAC,KAAA,yBAAAC,MAAA,aAAAC,MAAA,iCAAiHG,OAAUX,QAAA,GAAAC,KAAA;AAAAC,GAAA,sHAAAC,WAAA,EAAAC,aAAq+NC,KAAA,aAAAC,KAAA,yBAAAC,MAAA,cAAAC,MAAA,gCAAgHI,IAAA","file":"path---tags-interviews-367f32890f39f8694e82.js","sourcesContent":["webpackJsonp([258319957406633],{\n\n/***/ 276:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"pathContext\":{\"posts\":{\"devchallenges\":[{\"excerpt\":\"\",\"html\":\"<h3>Ahmed Ghazi – <i>Calligramme</i></h3>\\n<a target=\\\"_blank\\\" href=\\\"http://calligramme.aeai.eu/\\\">http://calligramme.aeai.eu/</a>\\n<hr>\\n<h3>Patrik Hübner – <i>Wiki-Footwear</i></h3>\\n<a target=\\\"_blank\\\" href=\\\"https://www.wiki-footwear.com/\\\">https://www.wiki-footwear.com/</a>\\n<hr>\\n<h3>Pascal Deville – <i>Wikiwear</i></h3>\\n<a target=\\\"_blank\\\" href=\\\"http://wikiwear.co/\\\">http://wikiwear.co/</a>\\n<hr>\\n<h3>Tim Rodenbröker – <i>UrbanAfrica</i></h3>\\n<a target=\\\"_blank\\\" href=\\\"http://timrodenbroeker.de/repo/urbanafrica/\\\">http://timrodenbroeker.de/repo/urbanafrica/</a>\\n<hr>\\n<h3>Aziz Ramos – <i>WikiNews</i></h3>\\n<a target=\\\"_blank\\\" href=\\\"http://notansari.com/wiki-news/\\\">http://notansari.com/wiki-news/</a>\\n<hr>\\n<h3>Fabian Wohlfahrt – <i>Delphi</i></h3>\\n<a target=\\\"_blank\\\" href=\\\"http://xyz.fabianwohlfart.com/delphi/\\\">http://xyz.fabianwohlfart.com/delphi/</a>\\n<hr>\\n<h3>Jack Wild</h3>\\n<a target=\\\"_blank\\\" href=\\\"https://wikipedia-deconstructed.isjackwild.com/\\\">https://wikipedia-deconstructed.isjackwild.com/</a>\\n---\",\"id\":\"/Users/tim/Documents/GitHub/crazycooldevelopers/content/blog/wikipedia/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":1,\"frontmatter\":{\"date\":\"2018-03-20\",\"path\":\"/challenges/wikipedia\",\"tags\":[\"devchallenges\"],\"title\":\"Wikipedia DevChallenge 2018 – These are the results\"}}],\"interviews\":[{\"excerpt\":\"\",\"html\":\"<h3>Hi Ahmed, thank you for giving this interview!</h3>\\n<p>Hi man, thanks for having me</p>\\n<h3>How did you come in touch with coding for the first time?</h3>\\n<p>My first encounter with coding was in junior school with MSDOS. My second encounter with coding was around 2007/2008 through friends who were making a skateboard website lesiteduskateboard.com, and crazy SEO ninja stuff.</p>\\n<p>At that time i was in College in Paris studying History and was about to pass exams to become a teacher. Then i bought a laptop to do ninja SEO website stuff with php, movable type, early wordpress.</p>\\n<p>Finally I installed Flash 8. And started to do some animations for a friend who was a director. Spending time in forums and google i came around some tuts showing how to fetch xml and display content. I was blown, i knew i could make something out of this. \\nIn summer 2009 a friend Nao had an Advertising Agency called Soixanteseize, back then they did a lot of flash websites, they agreed to welcome me and test me. </p>\\n<p>So i did my first website with videos in the background, huge xml, font animations, the FWA websites kind. It took me a month and half of pain, and struggle to make it, waking up at night daydreaming about eventListeners and tween, but i did, and they decided to keep me. </p>\\n<p>I learned a lot. Then Apple decided to kill Flash, so i had the choice in order to stay at the agency, either i would become a graphic designer, either i would stick to coding. So i learned php, wordpress, html5, js.</p>\\n<h3>Most of your projects like <a target=\\\"_blank\\\" href=\\\"http://theskateboardsoundtracks.com/\\\">http://theskateboardsoundtracks.com/</a>, <a target=\\\"_blank\\\" href=\\\"https://t-e-l-e-p-o-r-t.me/\\\">https://t-e-l-e-p-o-r-t.me/</a>, <a target=\\\"_blank\\\" href=\\\"http://m-o-n-o-m-i-x.com/\\\">http://m-o-n-o-m-i-x.com/</a>, <a target=\\\"_blank\\\" href=\\\"http://mixtubetape.eu/\\\">http://mixtubetape.eu/</a> have a strong conceptual component. Some of them went viral. How do you develop ideas for that kind of projects? </h3>\\n<p><a href=\\\"https://t-e-l-e-p-o-r-t.me/\\\">https://t-e-l-e-p-o-r-t.me</a> is defently the most viral one (150 000 visitors), everyday people tweet about it, that's sick. Ideas like that are slowly developed. Usually i'm browsing, then in some websites i feel there is something missing, then from that void comes the idea, i search if it has already been done, if not i rush to buy a domain name, then i start some sketch. </p>\\n<p>For the design it is always some lineal font (grotesk) or monotype and blue (the internet blue). i like to have this Visual Identity for all my digital projects. All of these are just fun to work with, it usually push me to use some new tech, new framework.\\nI still have a list of ideas that i'm willing to work on in the future. But it needs time.</p>\\n<h3>What is your artistic approach? </h3>\\n<p>If i can come back to history, there was a mouvement called l'école des annales which made history out of everything and not only wars and politics. You can apply that to digital projects, make website out of everything.</p>\\n<p>A friend of mine <a href=\\\"http://olivierlebrun.fr/\\\" target=\\\"_blank\\\">Olivier Lebrun</a> is a Graphic Designer. He makes books out of content available. I copyed the method to the web. Content are available everywhere (GAFA provide APIs), you just have to mix an idea with some database and make it look cool.</p>\\n<p>It has to be simple, people on internet are lazy, within a day if you look your browser history, it is huuuge. The goal of a website has to be understood, and in a glimpse. The less diversion you have the more efficient you'll be. My goal is to entertain, say something or at least give something usefull.</p>\\n<h3>Which artists and designers inspire you most?</h3>\\n<p><a target=\\\"_blank\\\" href=\\\"http://mrdoob.com/\\\">Mr Doob</a> (the engineer of interaction design), <a href=\\\"https://studiomoniker.com/\\\"target=\\\"_blank\\\">Moniker</a> are full of poetry and use all the digital spectrum. For example when i discovered them they had a website with a webcam pointing on a table and cell phone on some paper race track, on the page you had telephone numbers and when you called on of these numbers the phone was vibrating and moving toward the finish line. I loved the idea, users controlled an object somehwere in The Netherland. Proto Internet of things, that was brilliant.</p>\\n<p><a href=\\\"http://dia.tv/\\\" target=\\\"_blank\\\">Dia studio</a> for the crazy AR work with type design. Also some Pitchfork's cover stories are ill. Dieter Rams, Saul Bass, Experimental Jetset, DADA, Enzo Mari, skaters like Mark Gonzales, my friends.</p>\\n<h3>You work a lot with APIs. How did you came up with it?</h3>\\n<p>Contents are available everywhere as i said, usually the form is web 1.0, so let's give it a younger look with a tricks that makes it worth the visit. My first API project was fetching trending hashtags on twitter and for each keyword i called the google image search api, in the end the object is some king of digest of today's hot subjects. Another useless website, but fun to do. </p>\\n<h3>Tell us about your tech-stack</h3>\\n<p>I use Wordpress for regular websites, Node js with express and Mongodb for digital projects built from scratch, Angular for SPA, but moving to React with a headless cms like cockpit or firebase or graphcms (this is endless). My goal is to be as much serveless as possible with the backend in order to focus on the frontend.</p>\\n<p>For all these environments i like to use yeoman, it comes handy with gulp, preprocessing sass and js, livereload, build dist files. I have 3 screens and i'm sitting like a latinos in a lowrider.</p>\\n<h3>What are you currently working on?</h3>\\n<p>A website for la librairie des archives (check their instagram). A Foundry for some friends. Some Contemporary dance festival with the design of a cool studio called Spassky Fischer. Some stuff for friends who makes music.</p>\\n<p>An instagram aggregator for a skateshop, plenty of stuff.</p>\\n<p>I refurbed the <a target=\\\"_blank\\\" href=\\\"http://mixtubetape.eu/\\\">mixtubetape.eu</a> on react. It took me a week to understand redux, but i'm psyched now, it makes development so clear, and modular, you can build isolated ui components and reuse them as we did in the past with Flash.</p>\\n<h3>Future plans?</h3>\\n<p>Make the new Instagram, hire super tech guys and Crazy UX Designer and hopefully change the internet game, create a new way, a new USAGE of making people interact.\\nBut one of my main goal is to make the post internet, make forms that comes from internet but live outside IRL.</p>\\n<p>I'm also tryin to have a workflow more efficient so that i can develop faster, in order to get more free time.</p>\\n<p>I had the opportunity to teach but couldn't make it, i'm looking forward to do it. \\nImproving react, graphql and all these new stuff (graphql is the future, can't wait).</p>\\n<h3>Thank you!!!!</h3>\",\"id\":\"/Users/tim/Documents/GitHub/crazycooldevelopers/content/blog/ahmedghazi/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":5,\"frontmatter\":{\"date\":\"2018-03-20\",\"path\":\"/interviews/ahmedghazi\",\"tags\":[\"interviews\"],\"title\":\"Interview with Ahmed Ghazi\"}}],\"interview\":[{\"excerpt\":\"\",\"html\":\"<h3>You describe your collaboration as a “virtual studio”. Would you explain the implications of this condition on your practice?</h3>\\n<p>We make things that you interact with and consume while being online from every place in the world and at every time. We also work for clients and with collaborators, that we have never met in IRL. Furthermore everything we built is based on digital networks, so we decided to exchange our ideas about all those things in the same way as we work on them — virtual. It saves a lot of offline infrastructures and feels very precise at the same moment. WYSIWYG.</p>\\n<h3>You worked on several projects for artistic and cultural institutions. Was there any need to make compromises? And if yes how did you approached them?</h3>\\n<p>There are always compromises about money, time, design and usability ideas. Since graphic design for the internet doesn’t materialize in any physical form and everything can be changed all the time, you can get lost while developing. Clients often are not aware of that, so it became more and more our task to structure things in a very specific way, to determine certain project stages and to make compromises — something that you can only learn by doing it. For cultural institutions we developed a dynamic questionnaire about their needs, expectations and tasks that help us to outline central scopes and to avoid too many compromises before doing the first design decision.</p>\\n<h3>Websites often have a central role in your visual identity projects. Could you say that some websites are a starting point to develop entire identity systems? Something like website-first visual identities?</h3>\\n<p>Maybe not the website itself. It is more the general digital approach of the institution that can be an interesting starting point. Is it about making complex data legible, about digital entertainment or is it about the interaction with the website visitors and can there be a moment of self-reflection? To have a significant idea about the content helps us to translate this into visual language that then can be adopted on all media and then you could speak of a website-first visual identity.</p>\\n<h3>In the Klasse Digitale Grafik at HFBK you investigate on the relationships between digital culture and graphic design. Do you see a hybridization — both technical and theoretical — between designers and developers?\\n</h3>\\n<p>Students often ask us if it’s necessary to know how to code when applying for the class (www.digitale-grafik.com). We do not think so. For us it is more important to know and understand network politics, the power of algorithms and many other relevant aspects of the digital world that surrounds us. And we then ask how do those things have influence on contemporary graphic design, which is also mainly digital these days. We help students to make visual concepts, that can interact with digital culture and that are questioning beaten visual paths and all the template engines. To do that, coding can be helpful, but sometimes a simple pdf can be much stronger.</p>\\n<h3>As you say “the development of a website is a chaotic process”, a multitude of possibilities which also depend on empirical factors. It looks like you consider the development process a performance. What do you think?</h3>\\n<p>When you work on digital projects you have to deal with a bunch of unknown dependencies. The API you have to use, the users devices, various browsers and much more. You can then try to find a common ground that probably works in every case. And even when you have dealt with all technical issues, you have the editors, authors, the humans that work with the website. It is another endless pool of unexpected factors that can change the project completely. In our experience you will never reach a stable point.</p>\\n<p>That’s why we describe the development of a website as a chaotic process. We find this is a honest starting point when we start to develop a website with somebody. In one of our recent projects, www.k-komma.de, which is a new project space in Berlin, we are trying to make this process transparent. “A Website is Never Ready” means, that we are practicing what we normally do without saying it: changing, adopting and optimizing the whole website eco-system — visible for visitors of the space in a performative way.</p>\\n<h3>What are in your opinion the most important and interesting Github repositories?</h3>\\n<p>There are too many to name but I just heard Jürg Lehni from one of the coolest canvas drawing libraries paper.js (https://github.com/paperjs) is looking for maintainers.</p>\\n<hr>\\n<p>Interview: Davide Giorgetta</p>\",\"id\":\"/Users/tim/Documents/GitHub/crazycooldevelopers/content/blog/knothandrenner/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":3,\"frontmatter\":{\"date\":\"2018-03-19\",\"path\":\"/interviews/knothandrenner\",\"tags\":[\"interview\"],\"title\":\"Interview with Christoph Knoth & Konrad Renner\"}},{\"excerpt\":\"\",\"html\":\"<h3>Your projects — as is well known— involve user participation as a fundamental part of online and offline performances. Would you tell us how do you balance unpredictability and planning in your processes?</h3>\\n<p>In our practise we are interested to involve the user or participant in order to influence the work. The impact of the participation has to be well thought through. For these kind of projects we design a framework in which users become actors. Scenarios of user behavior are an important part of the development process.\\nBut people are unpredictable and we integrate user tests at an early stage. Usually this is very revealing and we discover unexpected behaviour and new possible impacts. Then we go back to the drawing board and adjust the framework. This can happen in several iterations. In fact we are quite paradoxical: on the one hand we try to avoid too much unpredictability and are like total control freaks, on the other hand we have to let go of the process once a project is live. We even love it, when our system gets ‘hacked’. This is one of the triggers for us to keep doing participatory works. We love to see how people engage with the work and try to find workarounds, tricks and solutions to behave otherwise. It is a little bit like parenting: you never really know if it will work out the way you hope.</p>\\n<h3>Are there any limits to the hybridization between online and offline practices? (if there are any)</h3>\\n<p>We like to mix up the online and offline domain. For example we set up a digital collaborative lettering tool the outcome of which will be engraved in real granite stones. When you click a button in your browser you puff up a physical balloon. People in real life receive instructions as if they were part of a computational program.</p>\\n<p>Probably the limits in hybridization get less and less. It is a very interesting time where the digital domain intrudes in our offline environment and vice versa.</p>\\n<p>We are a bit sceptical however towards the political aspect of this hybridization: we cannot foresee what the social effects will be of a total online-offline melt. We are curious about it, we like to thematize it with our work but in the end we can only observe its developments.</p>\\n<h3>What is the importance of browsing an experimental project on multiple devices and browsers? And what do you think about experimental web experiences conceived for one specific device?</h3>\\n<p>Whether we're working on a self initiated project or a project for a client, we never want to exclude particular browsers or devices and make our projects as accessible as possible. Our recent web projects were more focused on mobile where the differences between devices are bigger (than on desktop).</p>\\n<p>As mobile devices and their browsers keep getting more powerful and capable — whether that's by new features like WebRTC, WebVR, or just more processing power — more of our ideas are becoming possible to produce. Although we try to wait for new technologies to be available for most people it's inevitable to exclude some (those with older devices or operating systems).\\nFor a new technology it's always hard to find the balance between adoption rate and uniqueness/newness/freshness.</p>\\n<p>For some projects it makes a lot of sense to only target one specific device (e.g. Dance Tonite). Although we do think it's important to always provide a well designed fallback for others to understand and get a feeling of the project.</p>\\n<p>Another part of keeping a project accessible is to target the browser instead of a native app. Of course we also do this to lower the threshold for users to participate in our projects.</p>\\n<h3>What are the technologies (online/offline tools, languages) you most often use in your projects?</h3>\\n<p>Most of our recent front-end projects are being build with React (and it's excellent Create React App) in combination with Redux. We're still fiddling around with some Node JS based back-end frameworks, but always add Kirby if there's any editorial work involved. For most projects we setup a VPS with Dokku installed which makes deploying our BitBucket hosted code very easy using BitBucket's pipeline add-on.</p>\\n<h3>Does it make sense to exhibit online performances? How would you exhibit your online participated experiences?</h3>\\n<p>Our practice oscillates between art and design. Sometimes our work is the result of an art commission, sometimes a video clip, sometimes a campaign for a company with a clear message.\\nIdeally the online performance has an interesting outcome that can stand on its own. Usually we think of ways to document or capture the process already in the development phase. If we can capture the process in form of a video or film it is rather unproblematic to exhibit. We have done that quite often in the past.\\nWe find rather difficult, however, exhibiting an online interactive project in a gallery . The interaction with a screen in an exhibition space is different to your desk or regular environment. As we like to confront the users in their usual habitat, we try to avoid displacing the online performance into an exhibition space.</p>\\n<h3>What are the biggest difficulties in the interaction between design and development?</h3>\\n<p>Design and development are both in service of an idea or concept. They have to work together to communicate this idea or concept as best they can. Ideally this means a lot of iterations where design and development feed off each other. (Design can only be finished when development is too.)</p>\\n<p>Unfortunately it's a lot faster to come up and sketch something new than it is to build it. Making a sketch in code can sometimes take up quite some time. Especially with design that has to \\\"feel\\\" good this can be problematic. Finding the balance between performance, looks and feeling requires a lot of work.</p>\\n<h3>What are in your opinion the most important and interesting Github repositories?</h3>\\n<p>Although of lot of code is being shared between (creative) coders, it often is nothing more than just a sketch, example or proof of concept. An exception are some projects by the Google’s Data Arts Team and their Creative Lab. They often collaborate with designers and developers to showcase new technologies in a creative way. All of these projects have their own Github repositories and are great examples of creative coding. A good example would be the Dance Tonite repository by Moniker co-founder Jonathan Puckey.</p>\\n<h3>Thanks!</h3>\",\"id\":\"/Users/tim/Documents/GitHub/crazycooldevelopers/content/blog/moniker/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":4,\"frontmatter\":{\"date\":\"2018-03-18\",\"path\":\"/interviews/moniker\",\"tags\":[\"interview\"],\"title\":\"Interview with Studio Moniker\"}},{\"excerpt\":\"\",\"html\":\"<h3>How did you become a developer?</h3>\\n<p>When I was young I often did really simple websites using Dreamweaver.</p>\\n<p>I was always interested in real programming since I was like 14. I went to a C++ course when I was 14 but didn't understand anything. Also in school i joined computer science classes but didn't understand anything.</p>\\n<p>When I studied graphic design I met two guys who did really nice websites and it fascinated me. I was so curious. </p>\\n<p>I felt I needed more brain stimulation than \\\"just\\\" graphic design. I kind of felt I'm getting dumber and missed the challenge of trying to understand abstract stuff like when I had to try really hard to understand Maths and Physics. I was really bad at both and you don't really need these two when you are programming. Depends on what you are programming of course.</p>\\n<p>We had so much spare time, especially during semester breaks. So I started learning C++. Bought a book and said to myself: Ok, you're gonna read 50 pages everyday. I also watched all of the C++ course videos on Stanford's YouTube Channel. While I haven't used C++ much, it taught me all of the programming basics and this you can apply to any language. The concepts are often the same. I mean, a loop is a loop, right?\\nYes you need to be patient and curious.</p>\\n<h3>What is more important for you: Your design projects for clients or the products you sell? (just like the lay theme or the lay gridder)</h3>\\n<p>I guess you mean, what's more important, the \\\"designy\\\" websites that I develop or my products. Because the websites I did, most of them I haven't designed. I only helped with interaction ideas mostly.</p>\\n<p>Well lately, I've been thinking about this a lot. You know, when you got a digital product like lay theme, people buy it while you're asleep. It's a complex project that I want to keep improving and it pays off long-term. Small designy websites don't pay much in comparison. Designy websites for clients who can't pay a lot is not a huge business opportunity.</p>\\n<p>Doing designy websites is nice, because it's like a flashy thing that gets attention and you did it for the love of it. It's more like, ok you did it because there is a higher goal of trying to do something fresh and hopefully iconic. I mean you grow up admiring all these famous designers and artists who've come and gone and you wanna be one of them somehow right? It's this romantic idea of maybe you can become someone who can do something that feels new. Then people will remember you. That's the approach of an artist, that's what I wanted to be years ago. And when you do only that, of course you will be broke. Cool but broke. Don't do too much of it.</p>\\n<p>At one point I realized, probably I won't be a groundbreaking designer or artist, but when I develop websites at least I can work with designers who I'm a fanboy of. And when CSS3 came along, there were possibilites to do something that felt fresh, because now browsers could do better animations. Nowadays if you want to do a really fresh cool website, I think you need to learn WebGL. I'm amazed by websites like this one by bureau___cool http://departmentofnewrealities.com/</p>\\n<p>Now I'm more like, ok I did this, not gonna do it anymore. I think improving lay theme is a much better time investment for me than trying to do small websites that are cool. And if I do a small cool website that doesn't pay much, give me full control. I do the design and the development like for the sucukundbratwurst website www.sucukundbratwurst.de <3. Follow them, seriously @sucukundbratwurst.</p>\\n<p>Right now, I want to do big complex websites, I want to work in a team, I want to take more of a business approach instead of an artist approach. </p>\\n<h3>Tell us a bit about your stack. Which frameworks do you use?</h3>\\n<p>I use WordPress a lot and for my Frontends I used Backbone JS with Marionette JS a lot. With WordPress of course there's much PHP. I just get JSON with the WordPress REST-API and then mostly my websites are JavaScript applications like www.meireundmeire.com. This way you can do nice transitions when navigating, slick!</p>\\n<p>I've heard kirby is great for simple websites. I'm hyped about using contentful.com or prismic.io. Services that are API based. WordPress works well for me, because I have used it a LOT. But I admit, WordPress is a little bloated, so it can be hard to grasp everything it can do when you're a beginner.\\nWordPress is not perfect but it is the most used CMS. Just install it, disable everything you don't need with some setup code, install the Advanced Custom Fields plugin www.advancedcustomfields.com (and maybe laygridder.com ? <3), do a simple PHP website. Or do a JavaScript frontend using the REST API and Angular or React or something.<p>\\n<h3>All of your websites seem to work a bit different, both from a creative and a technical perspective. What is your secret ingredient?</h3>\\n<p>If all of my websites were designed by the same person, maybe they would be more similar. Also there's no use in doing the same thing over and over again. You want to try different things so you feel you're progressing right?</p>\\n<h3>You have used React.js for the development of the \\\"Lay Gridder\\\". What is the main benefit of working with single-page-frameworks?</h3>\\n<p>Mostly my teammate Felix Albert did the re-development of the Gridder. He is an amazing software developer, so clever! He could already do C++ when he was 14, unlike me.\\nRedux, which you can use with React is great for complex state management.\\nImagine there's an application in your browser that can do a hundred things and when you click one button, that affects other things in different places of the application. Like when you use facebook.\\nThe Gridder is the most complex part of Lay Theme and we needed to completely redo it to be able to add more features in the future. </p>\\n<p>Ok, time of basics. JavaScript is great because you can update small parts of your website, instead of the whole website. Load content in dynamically, send requests to other servers and just do rich complex things. Open google maps in your browser. If we didn't have JavaScript, that level of interactivity in a browser would be impossible. \\nUsing JavaScript frameworks like React, Angular, Vue etc is great for code structure, separation of concerns, state management.</p>\\n<h3>How long did you need to learn React.js?</h3>\\n<p>We did this one website in 2 weeks. We said to ourselves, ok let's do it differently this time, let's use React.\\nWe didn't know React or Redux, we just quickly watched some React tutorials. I don't recommend doing a project that has a tight deadline with a technology you haven't used before. Unless you are hardcore xD. I had to get up at like 5 or 6 in the morning every day to be able to finish the project.</p>\\n<p>Also we didn't really need to use Redux for this, that was overkill for a small restaurant website. But we did it anyway just  to learn it. Well, even months later I was still stressed out just thinking about the project. And then the deadline was so arbitrary because after we finished, they waited months to really go online. That was a few months prior to me taking a break from programming for almost half a year.</p>\\n<h3>Do you have developer-partners which support you in your daily business? Or do you even have employees?</h3>\\n<p>Felix Albert is my teammate, we complement each other perfectly. He is a fullstack developer and I'm doing more frontend, I can understand designers. Marius Jopen helps me with Lay Theme support, love that guy! I want to work with Denis Yilmaz, maybe with Ben Wegscheider or Jack Wild. I only want to work with people who are as good or better than me. I don't want to be someones boss, I want to be your teammate. I'm so impressed by people who are good at webgl or who are good with backend development.</p>\\n<h3>Who would you love to work for?</h3>\\n<p>My dream is to make a cool real estate website for some big ass futuristic penthouse skyscraper that's on Miami Beach. With cool renderings on the website. I want to work on big websites for big brands with big budgets. I need a challenge. And then I need a break. And then I need a challenge again. </p>\\n<p>Everybody listen, don't put your career success over your general well-being. Take good care of yourself. You might think that career success will make you happy, but it's the mix of career, health and feeling connected, meaning good friends and relationships. </p>\\n<p>And doing work that you dislike but being really good at it, well that's not my definition of success. I know it can be hard but try to be able to do only what you want to do.</p>\\n<h3>Future plans?</h3>\\n<p>We are in the process of creating our own web development company. I want to travel more and work more on lay theme. I want to learn WebGL. But I'm not sure if I even have the time for that. I wanna do fitness more and balance out all parts of my life. I want to do great work, in a relaxed way.</p>\\n<h3>Thanks!</h3>\",\"id\":\"/Users/tim/Documents/GitHub/crazycooldevelopers/content/blog/arminunruh/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":6,\"frontmatter\":{\"date\":\"2018-03-18\",\"path\":\"/interviews/arminunruh\",\"tags\":[\"interview\"],\"title\":\"Interview with Armin Unruh\"}}]},\"post\":[{\"excerpt\":\"\",\"html\":\"<h3>Hi Ahmed, thank you for giving this interview!</h3>\\n<p>Hi man, thanks for having me</p>\\n<h3>How did you come in touch with coding for the first time?</h3>\\n<p>My first encounter with coding was in junior school with MSDOS. My second encounter with coding was around 2007/2008 through friends who were making a skateboard website lesiteduskateboard.com, and crazy SEO ninja stuff.</p>\\n<p>At that time i was in College in Paris studying History and was about to pass exams to become a teacher. Then i bought a laptop to do ninja SEO website stuff with php, movable type, early wordpress.</p>\\n<p>Finally I installed Flash 8. And started to do some animations for a friend who was a director. Spending time in forums and google i came around some tuts showing how to fetch xml and display content. I was blown, i knew i could make something out of this. \\nIn summer 2009 a friend Nao had an Advertising Agency called Soixanteseize, back then they did a lot of flash websites, they agreed to welcome me and test me. </p>\\n<p>So i did my first website with videos in the background, huge xml, font animations, the FWA websites kind. It took me a month and half of pain, and struggle to make it, waking up at night daydreaming about eventListeners and tween, but i did, and they decided to keep me. </p>\\n<p>I learned a lot. Then Apple decided to kill Flash, so i had the choice in order to stay at the agency, either i would become a graphic designer, either i would stick to coding. So i learned php, wordpress, html5, js.</p>\\n<h3>Most of your projects like <a target=\\\"_blank\\\" href=\\\"http://theskateboardsoundtracks.com/\\\">http://theskateboardsoundtracks.com/</a>, <a target=\\\"_blank\\\" href=\\\"https://t-e-l-e-p-o-r-t.me/\\\">https://t-e-l-e-p-o-r-t.me/</a>, <a target=\\\"_blank\\\" href=\\\"http://m-o-n-o-m-i-x.com/\\\">http://m-o-n-o-m-i-x.com/</a>, <a target=\\\"_blank\\\" href=\\\"http://mixtubetape.eu/\\\">http://mixtubetape.eu/</a> have a strong conceptual component. Some of them went viral. How do you develop ideas for that kind of projects? </h3>\\n<p><a href=\\\"https://t-e-l-e-p-o-r-t.me/\\\">https://t-e-l-e-p-o-r-t.me</a> is defently the most viral one (150 000 visitors), everyday people tweet about it, that's sick. Ideas like that are slowly developed. Usually i'm browsing, then in some websites i feel there is something missing, then from that void comes the idea, i search if it has already been done, if not i rush to buy a domain name, then i start some sketch. </p>\\n<p>For the design it is always some lineal font (grotesk) or monotype and blue (the internet blue). i like to have this Visual Identity for all my digital projects. All of these are just fun to work with, it usually push me to use some new tech, new framework.\\nI still have a list of ideas that i'm willing to work on in the future. But it needs time.</p>\\n<h3>What is your artistic approach? </h3>\\n<p>If i can come back to history, there was a mouvement called l'école des annales which made history out of everything and not only wars and politics. You can apply that to digital projects, make website out of everything.</p>\\n<p>A friend of mine <a href=\\\"http://olivierlebrun.fr/\\\" target=\\\"_blank\\\">Olivier Lebrun</a> is a Graphic Designer. He makes books out of content available. I copyed the method to the web. Content are available everywhere (GAFA provide APIs), you just have to mix an idea with some database and make it look cool.</p>\\n<p>It has to be simple, people on internet are lazy, within a day if you look your browser history, it is huuuge. The goal of a website has to be understood, and in a glimpse. The less diversion you have the more efficient you'll be. My goal is to entertain, say something or at least give something usefull.</p>\\n<h3>Which artists and designers inspire you most?</h3>\\n<p><a target=\\\"_blank\\\" href=\\\"http://mrdoob.com/\\\">Mr Doob</a> (the engineer of interaction design), <a href=\\\"https://studiomoniker.com/\\\"target=\\\"_blank\\\">Moniker</a> are full of poetry and use all the digital spectrum. For example when i discovered them they had a website with a webcam pointing on a table and cell phone on some paper race track, on the page you had telephone numbers and when you called on of these numbers the phone was vibrating and moving toward the finish line. I loved the idea, users controlled an object somehwere in The Netherland. Proto Internet of things, that was brilliant.</p>\\n<p><a href=\\\"http://dia.tv/\\\" target=\\\"_blank\\\">Dia studio</a> for the crazy AR work with type design. Also some Pitchfork's cover stories are ill. Dieter Rams, Saul Bass, Experimental Jetset, DADA, Enzo Mari, skaters like Mark Gonzales, my friends.</p>\\n<h3>You work a lot with APIs. How did you came up with it?</h3>\\n<p>Contents are available everywhere as i said, usually the form is web 1.0, so let's give it a younger look with a tricks that makes it worth the visit. My first API project was fetching trending hashtags on twitter and for each keyword i called the google image search api, in the end the object is some king of digest of today's hot subjects. Another useless website, but fun to do. </p>\\n<h3>Tell us about your tech-stack</h3>\\n<p>I use Wordpress for regular websites, Node js with express and Mongodb for digital projects built from scratch, Angular for SPA, but moving to React with a headless cms like cockpit or firebase or graphcms (this is endless). My goal is to be as much serveless as possible with the backend in order to focus on the frontend.</p>\\n<p>For all these environments i like to use yeoman, it comes handy with gulp, preprocessing sass and js, livereload, build dist files. I have 3 screens and i'm sitting like a latinos in a lowrider.</p>\\n<h3>What are you currently working on?</h3>\\n<p>A website for la librairie des archives (check their instagram). A Foundry for some friends. Some Contemporary dance festival with the design of a cool studio called Spassky Fischer. Some stuff for friends who makes music.</p>\\n<p>An instagram aggregator for a skateshop, plenty of stuff.</p>\\n<p>I refurbed the <a target=\\\"_blank\\\" href=\\\"http://mixtubetape.eu/\\\">mixtubetape.eu</a> on react. It took me a week to understand redux, but i'm psyched now, it makes development so clear, and modular, you can build isolated ui components and reuse them as we did in the past with Flash.</p>\\n<h3>Future plans?</h3>\\n<p>Make the new Instagram, hire super tech guys and Crazy UX Designer and hopefully change the internet game, create a new way, a new USAGE of making people interact.\\nBut one of my main goal is to make the post internet, make forms that comes from internet but live outside IRL.</p>\\n<p>I'm also tryin to have a workflow more efficient so that i can develop faster, in order to get more free time.</p>\\n<p>I had the opportunity to teach but couldn't make it, i'm looking forward to do it. \\nImproving react, graphql and all these new stuff (graphql is the future, can't wait).</p>\\n<h3>Thank you!!!!</h3>\",\"id\":\"/Users/tim/Documents/GitHub/crazycooldevelopers/content/blog/ahmedghazi/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":5,\"frontmatter\":{\"date\":\"2018-03-20\",\"path\":\"/interviews/ahmedghazi\",\"tags\":[\"interviews\"],\"title\":\"Interview with Ahmed Ghazi\"}}],\"tag\":\"interviews\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---tags-interviews-367f32890f39f8694e82.js","module.exports = {\"pathContext\":{\"posts\":{\"devchallenges\":[{\"excerpt\":\"\",\"html\":\"<h3>Ahmed Ghazi – <i>Calligramme</i></h3>\\n<a target=\\\"_blank\\\" href=\\\"http://calligramme.aeai.eu/\\\">http://calligramme.aeai.eu/</a>\\n<hr>\\n<h3>Patrik Hübner – <i>Wiki-Footwear</i></h3>\\n<a target=\\\"_blank\\\" href=\\\"https://www.wiki-footwear.com/\\\">https://www.wiki-footwear.com/</a>\\n<hr>\\n<h3>Pascal Deville – <i>Wikiwear</i></h3>\\n<a target=\\\"_blank\\\" href=\\\"http://wikiwear.co/\\\">http://wikiwear.co/</a>\\n<hr>\\n<h3>Tim Rodenbröker – <i>UrbanAfrica</i></h3>\\n<a target=\\\"_blank\\\" href=\\\"http://timrodenbroeker.de/repo/urbanafrica/\\\">http://timrodenbroeker.de/repo/urbanafrica/</a>\\n<hr>\\n<h3>Aziz Ramos – <i>WikiNews</i></h3>\\n<a target=\\\"_blank\\\" href=\\\"http://notansari.com/wiki-news/\\\">http://notansari.com/wiki-news/</a>\\n<hr>\\n<h3>Fabian Wohlfahrt – <i>Delphi</i></h3>\\n<a target=\\\"_blank\\\" href=\\\"http://xyz.fabianwohlfart.com/delphi/\\\">http://xyz.fabianwohlfart.com/delphi/</a>\\n<hr>\\n<h3>Jack Wild</h3>\\n<a target=\\\"_blank\\\" href=\\\"https://wikipedia-deconstructed.isjackwild.com/\\\">https://wikipedia-deconstructed.isjackwild.com/</a>\\n---\",\"id\":\"/Users/tim/Documents/GitHub/crazycooldevelopers/content/blog/wikipedia/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":1,\"frontmatter\":{\"date\":\"2018-03-20\",\"path\":\"/challenges/wikipedia\",\"tags\":[\"devchallenges\"],\"title\":\"Wikipedia DevChallenge 2018 – These are the results\"}}],\"interviews\":[{\"excerpt\":\"\",\"html\":\"<h3>Hi Ahmed, thank you for giving this interview!</h3>\\n<p>Hi man, thanks for having me</p>\\n<h3>How did you come in touch with coding for the first time?</h3>\\n<p>My first encounter with coding was in junior school with MSDOS. My second encounter with coding was around 2007/2008 through friends who were making a skateboard website lesiteduskateboard.com, and crazy SEO ninja stuff.</p>\\n<p>At that time i was in College in Paris studying History and was about to pass exams to become a teacher. Then i bought a laptop to do ninja SEO website stuff with php, movable type, early wordpress.</p>\\n<p>Finally I installed Flash 8. And started to do some animations for a friend who was a director. Spending time in forums and google i came around some tuts showing how to fetch xml and display content. I was blown, i knew i could make something out of this. \\nIn summer 2009 a friend Nao had an Advertising Agency called Soixanteseize, back then they did a lot of flash websites, they agreed to welcome me and test me. </p>\\n<p>So i did my first website with videos in the background, huge xml, font animations, the FWA websites kind. It took me a month and half of pain, and struggle to make it, waking up at night daydreaming about eventListeners and tween, but i did, and they decided to keep me. </p>\\n<p>I learned a lot. Then Apple decided to kill Flash, so i had the choice in order to stay at the agency, either i would become a graphic designer, either i would stick to coding. So i learned php, wordpress, html5, js.</p>\\n<h3>Most of your projects like <a target=\\\"_blank\\\" href=\\\"http://theskateboardsoundtracks.com/\\\">http://theskateboardsoundtracks.com/</a>, <a target=\\\"_blank\\\" href=\\\"https://t-e-l-e-p-o-r-t.me/\\\">https://t-e-l-e-p-o-r-t.me/</a>, <a target=\\\"_blank\\\" href=\\\"http://m-o-n-o-m-i-x.com/\\\">http://m-o-n-o-m-i-x.com/</a>, <a target=\\\"_blank\\\" href=\\\"http://mixtubetape.eu/\\\">http://mixtubetape.eu/</a> have a strong conceptual component. Some of them went viral. How do you develop ideas for that kind of projects? </h3>\\n<p><a href=\\\"https://t-e-l-e-p-o-r-t.me/\\\">https://t-e-l-e-p-o-r-t.me</a> is defently the most viral one (150 000 visitors), everyday people tweet about it, that's sick. Ideas like that are slowly developed. Usually i'm browsing, then in some websites i feel there is something missing, then from that void comes the idea, i search if it has already been done, if not i rush to buy a domain name, then i start some sketch. </p>\\n<p>For the design it is always some lineal font (grotesk) or monotype and blue (the internet blue). i like to have this Visual Identity for all my digital projects. All of these are just fun to work with, it usually push me to use some new tech, new framework.\\nI still have a list of ideas that i'm willing to work on in the future. But it needs time.</p>\\n<h3>What is your artistic approach? </h3>\\n<p>If i can come back to history, there was a mouvement called l'école des annales which made history out of everything and not only wars and politics. You can apply that to digital projects, make website out of everything.</p>\\n<p>A friend of mine <a href=\\\"http://olivierlebrun.fr/\\\" target=\\\"_blank\\\">Olivier Lebrun</a> is a Graphic Designer. He makes books out of content available. I copyed the method to the web. Content are available everywhere (GAFA provide APIs), you just have to mix an idea with some database and make it look cool.</p>\\n<p>It has to be simple, people on internet are lazy, within a day if you look your browser history, it is huuuge. The goal of a website has to be understood, and in a glimpse. The less diversion you have the more efficient you'll be. My goal is to entertain, say something or at least give something usefull.</p>\\n<h3>Which artists and designers inspire you most?</h3>\\n<p><a target=\\\"_blank\\\" href=\\\"http://mrdoob.com/\\\">Mr Doob</a> (the engineer of interaction design), <a href=\\\"https://studiomoniker.com/\\\"target=\\\"_blank\\\">Moniker</a> are full of poetry and use all the digital spectrum. For example when i discovered them they had a website with a webcam pointing on a table and cell phone on some paper race track, on the page you had telephone numbers and when you called on of these numbers the phone was vibrating and moving toward the finish line. I loved the idea, users controlled an object somehwere in The Netherland. Proto Internet of things, that was brilliant.</p>\\n<p><a href=\\\"http://dia.tv/\\\" target=\\\"_blank\\\">Dia studio</a> for the crazy AR work with type design. Also some Pitchfork's cover stories are ill. Dieter Rams, Saul Bass, Experimental Jetset, DADA, Enzo Mari, skaters like Mark Gonzales, my friends.</p>\\n<h3>You work a lot with APIs. How did you came up with it?</h3>\\n<p>Contents are available everywhere as i said, usually the form is web 1.0, so let's give it a younger look with a tricks that makes it worth the visit. My first API project was fetching trending hashtags on twitter and for each keyword i called the google image search api, in the end the object is some king of digest of today's hot subjects. Another useless website, but fun to do. </p>\\n<h3>Tell us about your tech-stack</h3>\\n<p>I use Wordpress for regular websites, Node js with express and Mongodb for digital projects built from scratch, Angular for SPA, but moving to React with a headless cms like cockpit or firebase or graphcms (this is endless). My goal is to be as much serveless as possible with the backend in order to focus on the frontend.</p>\\n<p>For all these environments i like to use yeoman, it comes handy with gulp, preprocessing sass and js, livereload, build dist files. I have 3 screens and i'm sitting like a latinos in a lowrider.</p>\\n<h3>What are you currently working on?</h3>\\n<p>A website for la librairie des archives (check their instagram). A Foundry for some friends. Some Contemporary dance festival with the design of a cool studio called Spassky Fischer. Some stuff for friends who makes music.</p>\\n<p>An instagram aggregator for a skateshop, plenty of stuff.</p>\\n<p>I refurbed the <a target=\\\"_blank\\\" href=\\\"http://mixtubetape.eu/\\\">mixtubetape.eu</a> on react. It took me a week to understand redux, but i'm psyched now, it makes development so clear, and modular, you can build isolated ui components and reuse them as we did in the past with Flash.</p>\\n<h3>Future plans?</h3>\\n<p>Make the new Instagram, hire super tech guys and Crazy UX Designer and hopefully change the internet game, create a new way, a new USAGE of making people interact.\\nBut one of my main goal is to make the post internet, make forms that comes from internet but live outside IRL.</p>\\n<p>I'm also tryin to have a workflow more efficient so that i can develop faster, in order to get more free time.</p>\\n<p>I had the opportunity to teach but couldn't make it, i'm looking forward to do it. \\nImproving react, graphql and all these new stuff (graphql is the future, can't wait).</p>\\n<h3>Thank you!!!!</h3>\",\"id\":\"/Users/tim/Documents/GitHub/crazycooldevelopers/content/blog/ahmedghazi/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":5,\"frontmatter\":{\"date\":\"2018-03-20\",\"path\":\"/interviews/ahmedghazi\",\"tags\":[\"interviews\"],\"title\":\"Interview with Ahmed Ghazi\"}}],\"interview\":[{\"excerpt\":\"\",\"html\":\"<h3>You describe your collaboration as a “virtual studio”. Would you explain the implications of this condition on your practice?</h3>\\n<p>We make things that you interact with and consume while being online from every place in the world and at every time. We also work for clients and with collaborators, that we have never met in IRL. Furthermore everything we built is based on digital networks, so we decided to exchange our ideas about all those things in the same way as we work on them — virtual. It saves a lot of offline infrastructures and feels very precise at the same moment. WYSIWYG.</p>\\n<h3>You worked on several projects for artistic and cultural institutions. Was there any need to make compromises? And if yes how did you approached them?</h3>\\n<p>There are always compromises about money, time, design and usability ideas. Since graphic design for the internet doesn’t materialize in any physical form and everything can be changed all the time, you can get lost while developing. Clients often are not aware of that, so it became more and more our task to structure things in a very specific way, to determine certain project stages and to make compromises — something that you can only learn by doing it. For cultural institutions we developed a dynamic questionnaire about their needs, expectations and tasks that help us to outline central scopes and to avoid too many compromises before doing the first design decision.</p>\\n<h3>Websites often have a central role in your visual identity projects. Could you say that some websites are a starting point to develop entire identity systems? Something like website-first visual identities?</h3>\\n<p>Maybe not the website itself. It is more the general digital approach of the institution that can be an interesting starting point. Is it about making complex data legible, about digital entertainment or is it about the interaction with the website visitors and can there be a moment of self-reflection? To have a significant idea about the content helps us to translate this into visual language that then can be adopted on all media and then you could speak of a website-first visual identity.</p>\\n<h3>In the Klasse Digitale Grafik at HFBK you investigate on the relationships between digital culture and graphic design. Do you see a hybridization — both technical and theoretical — between designers and developers?\\n</h3>\\n<p>Students often ask us if it’s necessary to know how to code when applying for the class (www.digitale-grafik.com). We do not think so. For us it is more important to know and understand network politics, the power of algorithms and many other relevant aspects of the digital world that surrounds us. And we then ask how do those things have influence on contemporary graphic design, which is also mainly digital these days. We help students to make visual concepts, that can interact with digital culture and that are questioning beaten visual paths and all the template engines. To do that, coding can be helpful, but sometimes a simple pdf can be much stronger.</p>\\n<h3>As you say “the development of a website is a chaotic process”, a multitude of possibilities which also depend on empirical factors. It looks like you consider the development process a performance. What do you think?</h3>\\n<p>When you work on digital projects you have to deal with a bunch of unknown dependencies. The API you have to use, the users devices, various browsers and much more. You can then try to find a common ground that probably works in every case. And even when you have dealt with all technical issues, you have the editors, authors, the humans that work with the website. It is another endless pool of unexpected factors that can change the project completely. In our experience you will never reach a stable point.</p>\\n<p>That’s why we describe the development of a website as a chaotic process. We find this is a honest starting point when we start to develop a website with somebody. In one of our recent projects, www.k-komma.de, which is a new project space in Berlin, we are trying to make this process transparent. “A Website is Never Ready” means, that we are practicing what we normally do without saying it: changing, adopting and optimizing the whole website eco-system — visible for visitors of the space in a performative way.</p>\\n<h3>What are in your opinion the most important and interesting Github repositories?</h3>\\n<p>There are too many to name but I just heard Jürg Lehni from one of the coolest canvas drawing libraries paper.js (https://github.com/paperjs) is looking for maintainers.</p>\\n<hr>\\n<p>Interview: Davide Giorgetta</p>\",\"id\":\"/Users/tim/Documents/GitHub/crazycooldevelopers/content/blog/knothandrenner/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":3,\"frontmatter\":{\"date\":\"2018-03-19\",\"path\":\"/interviews/knothandrenner\",\"tags\":[\"interview\"],\"title\":\"Interview with Christoph Knoth & Konrad Renner\"}},{\"excerpt\":\"\",\"html\":\"<h3>Your projects — as is well known— involve user participation as a fundamental part of online and offline performances. Would you tell us how do you balance unpredictability and planning in your processes?</h3>\\n<p>In our practise we are interested to involve the user or participant in order to influence the work. The impact of the participation has to be well thought through. For these kind of projects we design a framework in which users become actors. Scenarios of user behavior are an important part of the development process.\\nBut people are unpredictable and we integrate user tests at an early stage. Usually this is very revealing and we discover unexpected behaviour and new possible impacts. Then we go back to the drawing board and adjust the framework. This can happen in several iterations. In fact we are quite paradoxical: on the one hand we try to avoid too much unpredictability and are like total control freaks, on the other hand we have to let go of the process once a project is live. We even love it, when our system gets ‘hacked’. This is one of the triggers for us to keep doing participatory works. We love to see how people engage with the work and try to find workarounds, tricks and solutions to behave otherwise. It is a little bit like parenting: you never really know if it will work out the way you hope.</p>\\n<h3>Are there any limits to the hybridization between online and offline practices? (if there are any)</h3>\\n<p>We like to mix up the online and offline domain. For example we set up a digital collaborative lettering tool the outcome of which will be engraved in real granite stones. When you click a button in your browser you puff up a physical balloon. People in real life receive instructions as if they were part of a computational program.</p>\\n<p>Probably the limits in hybridization get less and less. It is a very interesting time where the digital domain intrudes in our offline environment and vice versa.</p>\\n<p>We are a bit sceptical however towards the political aspect of this hybridization: we cannot foresee what the social effects will be of a total online-offline melt. We are curious about it, we like to thematize it with our work but in the end we can only observe its developments.</p>\\n<h3>What is the importance of browsing an experimental project on multiple devices and browsers? And what do you think about experimental web experiences conceived for one specific device?</h3>\\n<p>Whether we're working on a self initiated project or a project for a client, we never want to exclude particular browsers or devices and make our projects as accessible as possible. Our recent web projects were more focused on mobile where the differences between devices are bigger (than on desktop).</p>\\n<p>As mobile devices and their browsers keep getting more powerful and capable — whether that's by new features like WebRTC, WebVR, or just more processing power — more of our ideas are becoming possible to produce. Although we try to wait for new technologies to be available for most people it's inevitable to exclude some (those with older devices or operating systems).\\nFor a new technology it's always hard to find the balance between adoption rate and uniqueness/newness/freshness.</p>\\n<p>For some projects it makes a lot of sense to only target one specific device (e.g. Dance Tonite). Although we do think it's important to always provide a well designed fallback for others to understand and get a feeling of the project.</p>\\n<p>Another part of keeping a project accessible is to target the browser instead of a native app. Of course we also do this to lower the threshold for users to participate in our projects.</p>\\n<h3>What are the technologies (online/offline tools, languages) you most often use in your projects?</h3>\\n<p>Most of our recent front-end projects are being build with React (and it's excellent Create React App) in combination with Redux. We're still fiddling around with some Node JS based back-end frameworks, but always add Kirby if there's any editorial work involved. For most projects we setup a VPS with Dokku installed which makes deploying our BitBucket hosted code very easy using BitBucket's pipeline add-on.</p>\\n<h3>Does it make sense to exhibit online performances? How would you exhibit your online participated experiences?</h3>\\n<p>Our practice oscillates between art and design. Sometimes our work is the result of an art commission, sometimes a video clip, sometimes a campaign for a company with a clear message.\\nIdeally the online performance has an interesting outcome that can stand on its own. Usually we think of ways to document or capture the process already in the development phase. If we can capture the process in form of a video or film it is rather unproblematic to exhibit. We have done that quite often in the past.\\nWe find rather difficult, however, exhibiting an online interactive project in a gallery . The interaction with a screen in an exhibition space is different to your desk or regular environment. As we like to confront the users in their usual habitat, we try to avoid displacing the online performance into an exhibition space.</p>\\n<h3>What are the biggest difficulties in the interaction between design and development?</h3>\\n<p>Design and development are both in service of an idea or concept. They have to work together to communicate this idea or concept as best they can. Ideally this means a lot of iterations where design and development feed off each other. (Design can only be finished when development is too.)</p>\\n<p>Unfortunately it's a lot faster to come up and sketch something new than it is to build it. Making a sketch in code can sometimes take up quite some time. Especially with design that has to \\\"feel\\\" good this can be problematic. Finding the balance between performance, looks and feeling requires a lot of work.</p>\\n<h3>What are in your opinion the most important and interesting Github repositories?</h3>\\n<p>Although of lot of code is being shared between (creative) coders, it often is nothing more than just a sketch, example or proof of concept. An exception are some projects by the Google’s Data Arts Team and their Creative Lab. They often collaborate with designers and developers to showcase new technologies in a creative way. All of these projects have their own Github repositories and are great examples of creative coding. A good example would be the Dance Tonite repository by Moniker co-founder Jonathan Puckey.</p>\\n<h3>Thanks!</h3>\",\"id\":\"/Users/tim/Documents/GitHub/crazycooldevelopers/content/blog/moniker/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":4,\"frontmatter\":{\"date\":\"2018-03-18\",\"path\":\"/interviews/moniker\",\"tags\":[\"interview\"],\"title\":\"Interview with Studio Moniker\"}},{\"excerpt\":\"\",\"html\":\"<h3>How did you become a developer?</h3>\\n<p>When I was young I often did really simple websites using Dreamweaver.</p>\\n<p>I was always interested in real programming since I was like 14. I went to a C++ course when I was 14 but didn't understand anything. Also in school i joined computer science classes but didn't understand anything.</p>\\n<p>When I studied graphic design I met two guys who did really nice websites and it fascinated me. I was so curious. </p>\\n<p>I felt I needed more brain stimulation than \\\"just\\\" graphic design. I kind of felt I'm getting dumber and missed the challenge of trying to understand abstract stuff like when I had to try really hard to understand Maths and Physics. I was really bad at both and you don't really need these two when you are programming. Depends on what you are programming of course.</p>\\n<p>We had so much spare time, especially during semester breaks. So I started learning C++. Bought a book and said to myself: Ok, you're gonna read 50 pages everyday. I also watched all of the C++ course videos on Stanford's YouTube Channel. While I haven't used C++ much, it taught me all of the programming basics and this you can apply to any language. The concepts are often the same. I mean, a loop is a loop, right?\\nYes you need to be patient and curious.</p>\\n<h3>What is more important for you: Your design projects for clients or the products you sell? (just like the lay theme or the lay gridder)</h3>\\n<p>I guess you mean, what's more important, the \\\"designy\\\" websites that I develop or my products. Because the websites I did, most of them I haven't designed. I only helped with interaction ideas mostly.</p>\\n<p>Well lately, I've been thinking about this a lot. You know, when you got a digital product like lay theme, people buy it while you're asleep. It's a complex project that I want to keep improving and it pays off long-term. Small designy websites don't pay much in comparison. Designy websites for clients who can't pay a lot is not a huge business opportunity.</p>\\n<p>Doing designy websites is nice, because it's like a flashy thing that gets attention and you did it for the love of it. It's more like, ok you did it because there is a higher goal of trying to do something fresh and hopefully iconic. I mean you grow up admiring all these famous designers and artists who've come and gone and you wanna be one of them somehow right? It's this romantic idea of maybe you can become someone who can do something that feels new. Then people will remember you. That's the approach of an artist, that's what I wanted to be years ago. And when you do only that, of course you will be broke. Cool but broke. Don't do too much of it.</p>\\n<p>At one point I realized, probably I won't be a groundbreaking designer or artist, but when I develop websites at least I can work with designers who I'm a fanboy of. And when CSS3 came along, there were possibilites to do something that felt fresh, because now browsers could do better animations. Nowadays if you want to do a really fresh cool website, I think you need to learn WebGL. I'm amazed by websites like this one by bureau___cool http://departmentofnewrealities.com/</p>\\n<p>Now I'm more like, ok I did this, not gonna do it anymore. I think improving lay theme is a much better time investment for me than trying to do small websites that are cool. And if I do a small cool website that doesn't pay much, give me full control. I do the design and the development like for the sucukundbratwurst website www.sucukundbratwurst.de <3. Follow them, seriously @sucukundbratwurst.</p>\\n<p>Right now, I want to do big complex websites, I want to work in a team, I want to take more of a business approach instead of an artist approach. </p>\\n<h3>Tell us a bit about your stack. Which frameworks do you use?</h3>\\n<p>I use WordPress a lot and for my Frontends I used Backbone JS with Marionette JS a lot. With WordPress of course there's much PHP. I just get JSON with the WordPress REST-API and then mostly my websites are JavaScript applications like www.meireundmeire.com. This way you can do nice transitions when navigating, slick!</p>\\n<p>I've heard kirby is great for simple websites. I'm hyped about using contentful.com or prismic.io. Services that are API based. WordPress works well for me, because I have used it a LOT. But I admit, WordPress is a little bloated, so it can be hard to grasp everything it can do when you're a beginner.\\nWordPress is not perfect but it is the most used CMS. Just install it, disable everything you don't need with some setup code, install the Advanced Custom Fields plugin www.advancedcustomfields.com (and maybe laygridder.com ? <3), do a simple PHP website. Or do a JavaScript frontend using the REST API and Angular or React or something.<p>\\n<h3>All of your websites seem to work a bit different, both from a creative and a technical perspective. What is your secret ingredient?</h3>\\n<p>If all of my websites were designed by the same person, maybe they would be more similar. Also there's no use in doing the same thing over and over again. You want to try different things so you feel you're progressing right?</p>\\n<h3>You have used React.js for the development of the \\\"Lay Gridder\\\". What is the main benefit of working with single-page-frameworks?</h3>\\n<p>Mostly my teammate Felix Albert did the re-development of the Gridder. He is an amazing software developer, so clever! He could already do C++ when he was 14, unlike me.\\nRedux, which you can use with React is great for complex state management.\\nImagine there's an application in your browser that can do a hundred things and when you click one button, that affects other things in different places of the application. Like when you use facebook.\\nThe Gridder is the most complex part of Lay Theme and we needed to completely redo it to be able to add more features in the future. </p>\\n<p>Ok, time of basics. JavaScript is great because you can update small parts of your website, instead of the whole website. Load content in dynamically, send requests to other servers and just do rich complex things. Open google maps in your browser. If we didn't have JavaScript, that level of interactivity in a browser would be impossible. \\nUsing JavaScript frameworks like React, Angular, Vue etc is great for code structure, separation of concerns, state management.</p>\\n<h3>How long did you need to learn React.js?</h3>\\n<p>We did this one website in 2 weeks. We said to ourselves, ok let's do it differently this time, let's use React.\\nWe didn't know React or Redux, we just quickly watched some React tutorials. I don't recommend doing a project that has a tight deadline with a technology you haven't used before. Unless you are hardcore xD. I had to get up at like 5 or 6 in the morning every day to be able to finish the project.</p>\\n<p>Also we didn't really need to use Redux for this, that was overkill for a small restaurant website. But we did it anyway just  to learn it. Well, even months later I was still stressed out just thinking about the project. And then the deadline was so arbitrary because after we finished, they waited months to really go online. That was a few months prior to me taking a break from programming for almost half a year.</p>\\n<h3>Do you have developer-partners which support you in your daily business? Or do you even have employees?</h3>\\n<p>Felix Albert is my teammate, we complement each other perfectly. He is a fullstack developer and I'm doing more frontend, I can understand designers. Marius Jopen helps me with Lay Theme support, love that guy! I want to work with Denis Yilmaz, maybe with Ben Wegscheider or Jack Wild. I only want to work with people who are as good or better than me. I don't want to be someones boss, I want to be your teammate. I'm so impressed by people who are good at webgl or who are good with backend development.</p>\\n<h3>Who would you love to work for?</h3>\\n<p>My dream is to make a cool real estate website for some big ass futuristic penthouse skyscraper that's on Miami Beach. With cool renderings on the website. I want to work on big websites for big brands with big budgets. I need a challenge. And then I need a break. And then I need a challenge again. </p>\\n<p>Everybody listen, don't put your career success over your general well-being. Take good care of yourself. You might think that career success will make you happy, but it's the mix of career, health and feeling connected, meaning good friends and relationships. </p>\\n<p>And doing work that you dislike but being really good at it, well that's not my definition of success. I know it can be hard but try to be able to do only what you want to do.</p>\\n<h3>Future plans?</h3>\\n<p>We are in the process of creating our own web development company. I want to travel more and work more on lay theme. I want to learn WebGL. But I'm not sure if I even have the time for that. I wanna do fitness more and balance out all parts of my life. I want to do great work, in a relaxed way.</p>\\n<h3>Thanks!</h3>\",\"id\":\"/Users/tim/Documents/GitHub/crazycooldevelopers/content/blog/arminunruh/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":6,\"frontmatter\":{\"date\":\"2018-03-18\",\"path\":\"/interviews/arminunruh\",\"tags\":[\"interview\"],\"title\":\"Interview with Armin Unruh\"}}]},\"post\":[{\"excerpt\":\"\",\"html\":\"<h3>Hi Ahmed, thank you for giving this interview!</h3>\\n<p>Hi man, thanks for having me</p>\\n<h3>How did you come in touch with coding for the first time?</h3>\\n<p>My first encounter with coding was in junior school with MSDOS. My second encounter with coding was around 2007/2008 through friends who were making a skateboard website lesiteduskateboard.com, and crazy SEO ninja stuff.</p>\\n<p>At that time i was in College in Paris studying History and was about to pass exams to become a teacher. Then i bought a laptop to do ninja SEO website stuff with php, movable type, early wordpress.</p>\\n<p>Finally I installed Flash 8. And started to do some animations for a friend who was a director. Spending time in forums and google i came around some tuts showing how to fetch xml and display content. I was blown, i knew i could make something out of this. \\nIn summer 2009 a friend Nao had an Advertising Agency called Soixanteseize, back then they did a lot of flash websites, they agreed to welcome me and test me. </p>\\n<p>So i did my first website with videos in the background, huge xml, font animations, the FWA websites kind. It took me a month and half of pain, and struggle to make it, waking up at night daydreaming about eventListeners and tween, but i did, and they decided to keep me. </p>\\n<p>I learned a lot. Then Apple decided to kill Flash, so i had the choice in order to stay at the agency, either i would become a graphic designer, either i would stick to coding. So i learned php, wordpress, html5, js.</p>\\n<h3>Most of your projects like <a target=\\\"_blank\\\" href=\\\"http://theskateboardsoundtracks.com/\\\">http://theskateboardsoundtracks.com/</a>, <a target=\\\"_blank\\\" href=\\\"https://t-e-l-e-p-o-r-t.me/\\\">https://t-e-l-e-p-o-r-t.me/</a>, <a target=\\\"_blank\\\" href=\\\"http://m-o-n-o-m-i-x.com/\\\">http://m-o-n-o-m-i-x.com/</a>, <a target=\\\"_blank\\\" href=\\\"http://mixtubetape.eu/\\\">http://mixtubetape.eu/</a> have a strong conceptual component. Some of them went viral. How do you develop ideas for that kind of projects? </h3>\\n<p><a href=\\\"https://t-e-l-e-p-o-r-t.me/\\\">https://t-e-l-e-p-o-r-t.me</a> is defently the most viral one (150 000 visitors), everyday people tweet about it, that's sick. Ideas like that are slowly developed. Usually i'm browsing, then in some websites i feel there is something missing, then from that void comes the idea, i search if it has already been done, if not i rush to buy a domain name, then i start some sketch. </p>\\n<p>For the design it is always some lineal font (grotesk) or monotype and blue (the internet blue). i like to have this Visual Identity for all my digital projects. All of these are just fun to work with, it usually push me to use some new tech, new framework.\\nI still have a list of ideas that i'm willing to work on in the future. But it needs time.</p>\\n<h3>What is your artistic approach? </h3>\\n<p>If i can come back to history, there was a mouvement called l'école des annales which made history out of everything and not only wars and politics. You can apply that to digital projects, make website out of everything.</p>\\n<p>A friend of mine <a href=\\\"http://olivierlebrun.fr/\\\" target=\\\"_blank\\\">Olivier Lebrun</a> is a Graphic Designer. He makes books out of content available. I copyed the method to the web. Content are available everywhere (GAFA provide APIs), you just have to mix an idea with some database and make it look cool.</p>\\n<p>It has to be simple, people on internet are lazy, within a day if you look your browser history, it is huuuge. The goal of a website has to be understood, and in a glimpse. The less diversion you have the more efficient you'll be. My goal is to entertain, say something or at least give something usefull.</p>\\n<h3>Which artists and designers inspire you most?</h3>\\n<p><a target=\\\"_blank\\\" href=\\\"http://mrdoob.com/\\\">Mr Doob</a> (the engineer of interaction design), <a href=\\\"https://studiomoniker.com/\\\"target=\\\"_blank\\\">Moniker</a> are full of poetry and use all the digital spectrum. For example when i discovered them they had a website with a webcam pointing on a table and cell phone on some paper race track, on the page you had telephone numbers and when you called on of these numbers the phone was vibrating and moving toward the finish line. I loved the idea, users controlled an object somehwere in The Netherland. Proto Internet of things, that was brilliant.</p>\\n<p><a href=\\\"http://dia.tv/\\\" target=\\\"_blank\\\">Dia studio</a> for the crazy AR work with type design. Also some Pitchfork's cover stories are ill. Dieter Rams, Saul Bass, Experimental Jetset, DADA, Enzo Mari, skaters like Mark Gonzales, my friends.</p>\\n<h3>You work a lot with APIs. How did you came up with it?</h3>\\n<p>Contents are available everywhere as i said, usually the form is web 1.0, so let's give it a younger look with a tricks that makes it worth the visit. My first API project was fetching trending hashtags on twitter and for each keyword i called the google image search api, in the end the object is some king of digest of today's hot subjects. Another useless website, but fun to do. </p>\\n<h3>Tell us about your tech-stack</h3>\\n<p>I use Wordpress for regular websites, Node js with express and Mongodb for digital projects built from scratch, Angular for SPA, but moving to React with a headless cms like cockpit or firebase or graphcms (this is endless). My goal is to be as much serveless as possible with the backend in order to focus on the frontend.</p>\\n<p>For all these environments i like to use yeoman, it comes handy with gulp, preprocessing sass and js, livereload, build dist files. I have 3 screens and i'm sitting like a latinos in a lowrider.</p>\\n<h3>What are you currently working on?</h3>\\n<p>A website for la librairie des archives (check their instagram). A Foundry for some friends. Some Contemporary dance festival with the design of a cool studio called Spassky Fischer. Some stuff for friends who makes music.</p>\\n<p>An instagram aggregator for a skateshop, plenty of stuff.</p>\\n<p>I refurbed the <a target=\\\"_blank\\\" href=\\\"http://mixtubetape.eu/\\\">mixtubetape.eu</a> on react. It took me a week to understand redux, but i'm psyched now, it makes development so clear, and modular, you can build isolated ui components and reuse them as we did in the past with Flash.</p>\\n<h3>Future plans?</h3>\\n<p>Make the new Instagram, hire super tech guys and Crazy UX Designer and hopefully change the internet game, create a new way, a new USAGE of making people interact.\\nBut one of my main goal is to make the post internet, make forms that comes from internet but live outside IRL.</p>\\n<p>I'm also tryin to have a workflow more efficient so that i can develop faster, in order to get more free time.</p>\\n<p>I had the opportunity to teach but couldn't make it, i'm looking forward to do it. \\nImproving react, graphql and all these new stuff (graphql is the future, can't wait).</p>\\n<h3>Thank you!!!!</h3>\",\"id\":\"/Users/tim/Documents/GitHub/crazycooldevelopers/content/blog/ahmedghazi/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":5,\"frontmatter\":{\"date\":\"2018-03-20\",\"path\":\"/interviews/ahmedghazi\",\"tags\":[\"interviews\"],\"title\":\"Interview with Ahmed Ghazi\"}}],\"tag\":\"interviews\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/tags-interviews.json\n// module id = 276\n// module chunks = 258319957406633"],"sourceRoot":""}